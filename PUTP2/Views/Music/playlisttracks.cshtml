@model PUTP2.Models.PlaylistViewModel

@{
    ViewData["Title"] = Model.Playlist.Title;
}

<div class="playlist-container">
    <div class="playlist-header">
        <div class="playlist-info">
            <h1>@Model.Playlist.Title</h1>
            <p class="track-count">@Model.Playlist.TrackCount tracks â€¢ @Model.Playlist.Duration</p>
        </div>
    </div>

    <div class="tracks-list">
        @if (Model.Tracks != null && Model.Tracks.Any())
        {
            @foreach (var track in Model.Tracks)
            {
                <div class="track-item">
                    <div class="track-info">
                        <div class="track-details">
                            <h3>@track.Name</h3>
                            <p class="artist">@track.Artist</p>
                        </div>
                    </div>
                    <div class="track-controls">
                        <span class="duration">@track.Duration</span>
                        <button class="like-button" onclick="toggleLike(this)">
                            <i class="far fa-heart"></i>
                        </button>
                        <button class="play-button">
                            <i class="fas fa-play"></i>
                        </button>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-music"></i>
                <p>No tracks in this playlist yet</p>
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        .playlist-container {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .playlist-header {
            margin-bottom: 30px;
        }

        .playlist-info h1 {
            font-size: 32px;
            margin: 0 0 10px;
            font-weight: normal;
        }

        .track-count {
            color: #b3b3b3;
            font-size: 14px;
        }

        .tracks-list {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .track-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background-color: #282828;
            border-radius: 4px;
            transition: background-color 0.2s;
        }

        .track-item:hover {
            background-color: #404040;
        }

        .track-info {
            display: flex;
            align-items: center;
        }

        .track-details h3 {
            margin: 0;
            font-size: 14px;
            font-weight: normal;
        }

        .track-details p {
            margin: 4px 0 0;
            font-size: 12px;
            color: #b3b3b3;
        }

        .track-controls {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .duration {
            color: #b3b3b3;
            font-size: 12px;
        }

        .like-button {
            background: none;
            border: none;
            color: #b3b3b3;
            cursor: pointer;
            font-size: 16px;
            padding: 5px;
            transition: color 0.2s;
        }

        .like-button:hover {
            color: #1db954;
        }

        .like-button.liked {
            color: #1db954;
        }

        .play-button {
            background: none;
            border: none;
            color: #b3b3b3;
            cursor: pointer;
            font-size: 16px;
            padding: 5px;
            transition: color 0.2s;
        }

        .play-button:hover {
            color: #1db954;
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #b3b3b3;
        }

        .empty-state i {
            font-size: 48px;
            margin-bottom: 20px;
        }

        .empty-state p {
            margin: 0;
            font-size: 14px;
        }
    </style>
}

@section Scripts {
    <script>
        function toggleLike(button) {
            button.classList.toggle('liked');
            const icon = button.querySelector('i');
            if (button.classList.contains('liked')) {
                icon.classList.remove('far');
                icon.classList.add('fas');
            } else {
                icon.classList.remove('fas');
                icon.classList.add('far');
            }
        }
    </script>
} 