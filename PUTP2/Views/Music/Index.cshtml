@model PUTP2.Models.PlaylistViewModel

@{
    ViewData["Title"] = "The Vault";
    ViewData["HidePlayerBar"] = "true";
}

<div class="vault-container">
    <a href="/Music/Profile" class="profile-button">
        <i class="fas fa-user"></i>
    </a>

    <h1 class="vault-title">The Vault</h1>
    
    @if (ViewBag.Playlists != null)
    {
        <div class="playlist-cards-container">
            <div class="playlist-cards-grid">
                @{
                    var playlists = ViewBag.Playlists as IEnumerable<PUTP2.Models.PlaylistInfo>;
                    foreach (var playlist in playlists)
                    {
                        <div class="playlist-card-wrapper" data-playlist-id="@playlist.Id">
                            <div class="playlist-card" data-level="@playlist.Level">
                                <div class="playlist-card-inner">
                                    <div class="playlist-card-front">
                                        <div class="level-pattern"></div>
                                    </div>
                                    <div class="playlist-card-back">
                                        <div class="playlist-info">
                                            <h2>@playlist.Title</h2>
                                            <p>@playlist.TrackCount tracks â€¢ @playlist.Duration</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button class="delete-playlist-btn" onclick="deletePlaylist('@playlist.Id', '@playlist.Title')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    }
                }
            </div>
        </div>
    }

    <a href="/Home/TuneInSplash" class="switch-view-button">
        <i class="fas fa-broadcast-tower"></i>
        <span>tune in</span>
    </a>

    <a href="/Music/Upload" class="upload-button">
        <i class="fas fa-plus"></i>
    </a>
</div>

@section Styles {
    <style>
        /* Hide the footer bar */
        .footer-nav {
            display: none !important;
        }

        .profile-button {
            position: absolute;
            top: 15px;
            left: 15px;
            color: #2E2E2E;
            font-size: 18px;
            text-decoration: none;
            z-index: 10;
            background: var(--interactive);
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .profile-button:hover {
            background: var(--highlight);
            transform: scale(1.1);
        }

        .vault-container {
            position: relative;
            padding: 20px;
            padding-top: 20px;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .vault-title {
            text-align: center;
            margin-top: 20px;
            margin-bottom: 30px;
            font-size: 2.5em;
            color: #2E2E2E;
        }

        .playlist-cards-container {
            flex: 1;
            position: relative;
            overflow: hidden;
        }

        .playlist-cards-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .playlist-card-wrapper {
            width: 200px;
            height: 280px;
            perspective: 1000px;
            cursor: pointer;
            position: relative;
            background: transparent;
        }

        .playlist-card {
            position: relative;
            width: 100%;
            height: 100%;
            transform-style: preserve-3d;
            cursor: pointer;
            background: transparent;
        }

        .playlist-card-inner {
            position: relative;
            width: 100%;
            height: 100%;
            transition: transform 2s ease;
            transform-style: preserve-3d;
        }

        .playlist-card-wrapper:hover .playlist-card-inner {
            transform: rotateY(180deg);
        }

        .playlist-card-front, .playlist-card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            background: transparent;
        }

        .playlist-card-front {
            background: transparent;
        }

        .playlist-card-back {
            transform: rotateY(180deg);
            padding: 20px;
        }

        .level-pattern {
            width: 100%;
            height: 100%;
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }

        /* Level 1 playlists */
        [data-level="1"] .level-pattern {
            background-image: url('/images/level 01-pattern.jpg');
        }

        [data-level="1"] .playlist-card-front,
        [data-level="1"] .playlist-card-back {
            border: 2px solid var(--accent-color);
        }

        [data-level="1"] .playlist-card-back {
            background: linear-gradient(135deg, var(--bg-secondary), var(--secondary-accent));
        }

        /* Level 2 playlists */
        [data-level="2"] .level-pattern {
            background-image: url('/images/level 02-pattern.jpg');
        }

        [data-level="2"] .playlist-card-front,
        [data-level="2"] .playlist-card-back {
            border: 2px solid var(--interactive-color);
        }

        [data-level="2"] .playlist-card-back {
            background: linear-gradient(135deg, var(--accent-color), var(--secondary-accent));
        }

        /* Level 3 playlists */
        [data-level="3"] .level-pattern {
            background-image: url('/images/level 03-pattern.jpg');
        }

        [data-level="3"] .playlist-card-front,
        [data-level="3"] .playlist-card-back {
            border: 2px solid var(--highlight-color);
        }

        [data-level="3"] .playlist-card-back {
            background: linear-gradient(135deg, var(--secondary-accent), var(--accent-color));
        }

        @@media (max-width: 768px) {
            .playlist-cards-container {
                width: 100%;
                overflow: hidden;
            }

            .playlist-cards-grid {
                display: flex;
                overflow-x: auto;
                scroll-snap-type: x mandatory;
                -webkit-overflow-scrolling: touch;
                padding: 20px;
                gap: 20px;
                width: 100%;
                align-items: center;
                scrollbar-width: none;
                -ms-overflow-style: none;
            }

            .playlist-cards-grid::-webkit-scrollbar {
                display: none;
            }

            .playlist-card-wrapper {
                flex: 0 0 280px;
                width: 280px;
                height: 380px;
                scroll-snap-align: center;
                transform: scale(0.85);
                opacity: 0.5;
                transition: all 0.3s ease;
            }

            .playlist-card-wrapper.active {
                transform: scale(1);
                opacity: 1;
            }
        }

        .playlist-info {
            text-align: center;
            color: #2E2E2E;
        }

        .playlist-info h2 {
            margin: 0;
            font-size: 24px;
            color: #2E2E2E;
            margin-bottom: 10px;
        }

        .playlist-info p {
            margin: 5px 0 0;
            font-size: 14px;
            color: #2E2E2E;
        }

        .delete-playlist-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: var(--text-secondary);
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            color: var(--bg-primary);
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 10;
        }

        .playlist-card-wrapper:hover .delete-playlist-btn {
            opacity: 1;
        }

        .delete-playlist-btn:hover {
            background: var(--accent-color);
        }

        body[data-hide-player="true"] .player-bar {
            display: none;
        }

        .switch-view-button {
            position: fixed;
            bottom: 80px;
            left: 50%;
            transform: translateX(-50%);
            background: var(--interactive);
            color: #2E2E2E;
            text-decoration: none;
            padding: 8px 16px;
            border-radius: 20px;
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
            z-index: 999;
        }

        .switch-view-button:hover {
            background: var(--highlight);
            transform: translateX(-50%) scale(1.05);
        }

        .switch-view-button i {
            font-size: 16px;
            color: #2E2E2E;
        }

        .upload-button {
            position: fixed;
            bottom: 80px;
            right: 20px;
            background: var(--interactive);
            color: #2E2E2E;
            text-decoration: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            transition: all 0.3s ease;
            z-index: 999;
        }

        .upload-button:hover {
            background: var(--highlight);
            transform: scale(1.1);
        }

        /* Remove footer-related styles */
        .content-wrapper {
            height: 100vh;
        }
    </style>
}

@section Scripts {
    <script>
        function deletePlaylist(id, title) {
            const modal = document.createElement('div');
            modal.className = 'modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <h3>Delete Playlist</h3>
                    <p>Are you sure you want to delete "${title}"?</p>
                    <p>This action cannot be undone.</p>
                    <div class="modal-buttons">
                        <button class="confirm-delete" onclick="confirmDelete('${id}')">Delete</button>
                        <button class="cancel-delete" onclick="closeModal()">Cancel</button>
                    </div>
                </div>
            `;
            document.body.appendChild(modal);
            modal.style.display = 'block';
        }

        function closeModal() {
            const modal = document.querySelector('.modal');
            if (modal) {
                modal.remove();
            }
        }

        async function confirmDelete(id) {
            try {
                const response = await fetch(`/Music/DeletePlaylist?id=${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();
                if (result.success) {
                    const playlistCard = document.querySelector(`[data-playlist-id="${id}"]`);
                    if (playlistCard) {
                        playlistCard.remove();
                    }
                    alert('Playlist deleted successfully!');
                    window.location.reload();
                } else {
                    alert('Error deleting playlist: ' + result.message);
                }
            } catch (error) {
                alert('Error deleting playlist: ' + error.message);
            } finally {
                closeModal();
            }
        }

        document.addEventListener('click', function(event) {
            const modal = document.querySelector('.modal');
            if (modal && event.target === modal) {
                closeModal();
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            if (window.matchMedia('(max-width: 768px)').matches) {
                const container = document.querySelector('.playlist-cards-grid');
                const cards = Array.from(container.querySelectorAll('.playlist-card-wrapper'));
                
                function updateActiveCard() {
                    const middle = container.scrollLeft + (container.offsetWidth / 2);
                    let closestCard = null;
                    let closestDistance = Infinity;
                    
                    cards.forEach(card => {
                        const cardMiddle = card.offsetLeft + (card.offsetWidth / 2);
                        const distance = Math.abs(middle - cardMiddle);
                        
                        if (distance < closestDistance) {
                            closestDistance = distance;
                            closestCard = card;
                        }
                        
                        card.classList.remove('active');
                    });
                    
                    if (closestCard) {
                        closestCard.classList.add('active');
                    }
                }

                // Handle scroll events
                let scrollTimeout;
                container.addEventListener('scroll', () => {
                    clearTimeout(scrollTimeout);
                    scrollTimeout = setTimeout(updateActiveCard, 100);
                }, { passive: true });

                // Initial setup
                updateActiveCard();
                
                // Handle window resize
                window.addEventListener('resize', updateActiveCard, { passive: true });
            }

            // Click handler for playlist navigation
            const cards = document.querySelectorAll('.playlist-card-wrapper');
            cards.forEach(card => {
                card.addEventListener('click', function(e) {
                    if (e.target.closest('.delete-playlist-btn')) return;
                    const playlistId = this.dataset.playlistId;
                    window.location.href = `/Music/Playlist/${playlistId}`;
                });
            });
        });
    </script>
} 