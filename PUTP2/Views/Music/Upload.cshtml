@model List<PUTP2.Models.PlaylistInfo>
@using System.Text.Json
@* Use List<PlaylistInfo> directly as the model passed from the controller *@

@{
    ViewData["Title"] = "Add Card";
    ViewData["HidePlayerBar"] = "true"; // Keep player hidden if needed
    ViewData["HideFooterNav"] = "true"; // Add this line to hide footer
}

<div class="add-card-container" style="padding: 20px;">

    @* Replicate the centered title style from Index.cshtml *@
    <h1 class="add-card-title" style="text-align: center; margin-top: 20px; margin-bottom: 30px; font-size: 2.5em; color: #2E2E2E;">
        Add Card to Vault
    </h1>

    @if (Model != null && Model.Any())
    {
        <form asp-controller="Music" asp-action="MakeVisible" method="post" style="max-width: 400px; margin: 20px auto; padding: 20px; background-color: var(--bg-secondary, #f8f9fa); border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            @Html.AntiForgeryToken()
            
            <div class="form-group" style="margin-bottom: 15px;">
                <label for="playlistSearchInput" style="display: block; margin-bottom: 5px; font-weight: bold; color: var(--text-primary);">Search for Card (3-5 letters):</label>
                <input type="text" id="playlistSearchInput" class="form-control" placeholder="Type playlist name..." style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 4px; background-color: var(--bg-primary); color: var(--text-primary); margin-bottom: 10px;"/>
            </div>

            <div class="form-group" id="playlistSelectContainer" style="margin-bottom: 15px; display: none;"> @* Hidden initially *@
                <label for="playlistId" style="display: block; margin-bottom: 5px; font-weight: bold; color: var(--text-primary);">Select Matching Card:</label>
                <select name="playlistId" id="playlistId" class="form-control" style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 4px; background-color: var(--bg-primary); color: var(--text-primary);">
                    @* Options will be populated by JavaScript *@
                </select>
            </div>

            <button type="submit" id="addCardButton" class="btn btn-primary" style="padding: 10px 20px; background-color: var(--interactive); color: var(--text-primary); border: none; border-radius: 4px; cursor: pointer; transition: background-color 0.3s ease; width: 100%; display: none;"> @* Hidden initially *@
                Add Selected Card
            </button>
        </form>
    }
    else
    {
        <p style="text-align: center; margin-top: 40px; color: var(--text-secondary);">All available cards have been added to the Vault.</p>
    }

     <div style="text-align: center; margin-top: 30px;">
         <a asp-action="Index" asp-controller="Music" class="btn btn-secondary" style="padding: 8px 16px; background-color: var(--secondary-accent); color: var(--text-primary); text-decoration: none; border-radius: 4px;">
             Back to Vault
         </a>
    </div>

</div>

@* Add specific styles if needed, or rely on _Layout and inline styles *@
@section Styles {
    <style>
        /* Optional: Add custom styles for this page if needed */
        .add-card-container {
             min-height: calc(100vh - 60px); /* Adjust based on header/footer height if necessary */
            display: flex;
            flex-direction: column;
            justify-content: center;
        }
        .form-control {
            /* Example: ensure dropdown uses theme colors */
            background-color: var(--input-bg, #fff);
            color: var(--input-text, #000);
            border: 1px solid var(--input-border, #ccc);
        }
         .btn-primary:hover {
            background-color: var(--highlight); /* Use highlight color on hover */
         }
          .btn-secondary:hover {
             background-color: var(--highlight);
         }

         /* --- Explicitly hide footer navigation --- */
        .footer-nav {
            display: none !important;
        }
         /* --- If the above doesn't work, try a more specific selector if known --- */
         /* e.g., body > footer { display: none !important; } */
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('playlistSearchInput');
            const selectContainer = document.getElementById('playlistSelectContainer');
            const playlistSelect = document.getElementById('playlistId');
            const addButton = document.getElementById('addCardButton');
            
            // Store playlists in JS - Use Html.Raw to prevent double encoding
            const availablePlaylists = @Html.Raw(Json.Serialize(Model.Select(p => new { id = p.Id, title = p.Title, level = p.Level })));

            searchInput.addEventListener('input', function () {
                const searchText = this.value.trim().toLowerCase();
                
                playlistSelect.innerHTML = ''; // Clear previous options
                
                if (searchText.length >= 3 && searchText.length <= 5) {
                    const filteredPlaylists = availablePlaylists.filter(p => 
                        p.title.toLowerCase().includes(searchText)
                    );

                    if (filteredPlaylists.length > 0) {
                        filteredPlaylists.forEach(p => {
                            const option = document.createElement('option');
                            option.value = p.id;
                            option.textContent = `${p.title} (Level ${p.level})`;
                            playlistSelect.appendChild(option);
                        });
                        selectContainer.style.display = 'block';
                        addButton.style.display = 'block'; // Show button only when options are available
                    } else {
                        selectContainer.style.display = 'none';
                        addButton.style.display = 'none';
                    }
                } else {
                    selectContainer.style.display = 'none';
                    addButton.style.display = 'none';
                }
            });
        });
    </script>
} 