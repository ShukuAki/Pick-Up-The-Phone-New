@using System.IO
@model PUTP2.Models.PlaylistViewModel

@{
    ViewData["Title"] = Model.Playlist.Title;
    ViewData["HidePlayerBar"] = "true";
    ViewData["HideFooterNav"] = "true";
}

<div class="tunein-playlist-page-container">
    <a href="/Music/Index" class="back-button">
        <i class="fas fa-arrow-left"></i>
    </a>
    
    @* Add Record Button next to Back Button *@
    <a asp-action="RecordUpload" asp-controller="Music" asp-route-playlistId="@Model.Playlist.Id" class="record-button">
        <i class="fas fa-microphone-alt"></i>
    </a>

    <div class="playlist-header">
        <h1 class="playlist-title">@Model.Playlist.Title</h1>
        <div class="filter-container">
            <div class="age-filter-container">
                <button class="age-filter-btn active" data-age-group="All">All</button>
                <button class="age-filter-btn" data-age-group="Young">Grandchild</button>
                <button class="age-filter-btn" data-age-group="Old">Grandparent</button>
            </div>
        </div>
    </div>

    <div class="safari-track-list-container">
        @if (Model.Tracks != null && Model.Tracks.Any())
        {
            foreach (var track in Model.Tracks)
            {
                <div class="track-card-safari" data-track-id="@track.Id" data-age-group="@track.AgeGroup" data-track-name="@track.Name.ToLower()">
                    <div class="track-card-content">
                        <h3 class="track-card-title">@track.Name</h3>
                        <p class="track-card-details">Uploaded: @track.UploadDate.ToString("MMM dd, yyyy") | Duration: @track.Duration</p>
                        <div class="track-card-meta">
                            <span class="age-group">üë§ @(track.AgeGroup == "Young" ? "GrandChild" : track.AgeGroup == "Old" ? "GrandParent" : track.AgeGroup)</span>
                            <span class="location">üìç @track.Location</span>
                        </div>
                        
                        <button class="play-button" onclick="playTrack('@track.Id')">
                            <i class="fas fa-play"></i>
                        </button>
                        
                        <button class="delete-track-btn" onclick="deleteTrack('@track.Id', '@Model.Playlist.Id')">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="empty-state-message">
                <h3>No tracks in this playlist.</h3>
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        .footer-nav { display: none !important; }

        .tunein-playlist-page-container {
            padding: 20px;
            padding-top: 60px;
            min-height: 100vh;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            position: relative;
        }

        .back-button {
            position: absolute;
            top: 15px;
            left: 15px;
            color: var(--text-primary);
            font-size: 18px;
            text-decoration: none;
            z-index: 10;
            background: var(--interactive, #A0D8EF);
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            border: 1px solid var(--text-secondary, rgba(0,0,0,0.1));
        }

        .back-button:hover {
            background: var(--highlight, #F2C94C);
            transform: scale(1.1);
        }

        .playlist-header {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 20px;
        }

        .playlist-title {
            font-size: 2.5em;
            color: #000000;
            margin-bottom: 15px;
            text-align: center;
        }

        .safari-track-list-container {
            max-width: 600px;
            margin: 0 auto;
            height: 70vh;
            overflow-y: auto;
            overflow-x: hidden;
            padding: 20px 0; 
            scrollbar-width: thin;
            scrollbar-color: var(--interactive) var(--bg-secondary);
        }
        
        .safari-track-list-container::-webkit-scrollbar {
            width: 8px;
        }
        .safari-track-list-container::-webkit-scrollbar-track {
            background: var(--bg-secondary);
            border-radius: 4px;
        }
        .safari-track-list-container::-webkit-scrollbar-thumb {
            background-color: var(--interactive);
            border-radius: 4px;
            border: 2px solid var(--bg-secondary);
        }

        .track-card-safari {
            width: 90%;
            margin: 0 auto -40px auto;
            position: relative;
            z-index: 1;
            transition: transform 0.3s ease, z-index 0s 0.3s ease;
        }

        .track-card-safari:last-child {
             margin-bottom: 0;
        }

        .track-card-content {
            background-color: #f5e5d1;
            color: var(--text-primary);
            border: 1px solid #bf6713;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            position: relative; 
            overflow: hidden;
            min-height: 100px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            transition: all 0.3s ease;
        }

        .track-card-safari:hover {
            transform: translateY(-35px);
            z-index: 10;
            transition: transform 0.3s ease, z-index 0s ease;
        }

        .track-card-safari:hover .track-card-content {
             box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .track-card-safari:active .track-card-content {
             box-shadow: 0 3px 10px rgba(0, 0, 0, 0.12);
        }

        .track-card-safari:hover .track-card-title,
        .track-card-safari:hover .track-card-details,
        .track-card-safari:active .track-card-title,
        .track-card-safari:active .track-card-details {
             color: #000000;
        }

        .track-card-title {
            font-size: 1.2em;
            margin: 0 0 5px 0;
            font-weight: bold;
            color: var(--text-primary);
        }

        .track-card-details {
            font-size: 0.9em;
            color: var(--text-secondary);
            margin-bottom: 15px;
        }

        .play-button {
            position: absolute;
            bottom: 15px;
            right: 60px;
            background-color: var(--interactive);
            color: var(--text-primary);
            border: none;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 16px;
            z-index: 5;
        }

        .play-button:hover {
            background-color: var(--highlight);
            transform: scale(1.1);
        }

        .delete-track-btn {
            position: absolute;
            bottom: 15px;
            right: 15px;
            background: rgba(0, 0, 0, 0.1);
            color: var(--text-secondary);
            border: none;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 16px;
            z-index: 5;
        }

        .delete-track-btn:hover {
            background: var(--text-secondary);
            color: var(--bg-primary);
            transform: scale(1.1);
        }

        .empty-state-message {
             text-align: center;
             margin-top: 50px;
             color: var(--text-secondary);
        }

        .record-button {
            position: fixed;
            bottom: 15px;
            right: 55px;
            color: var(--text-primary);
            font-size: 18px;
            text-decoration: none;
            z-index: 10;
            background: var(--interactive, #A0D8EF);
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            border: 1px solid var(--text-secondary, rgba(0,0,0,0.1));
        }

        .record-button:hover {
            background: var(--highlight, #F2C94C);
            transform: scale(1.1);
        }

        .filter-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
            margin-top: 10px;
            margin-bottom: 20px;
            width: 100%;
        }

        .age-filter-container {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .age-filter-btn {
            padding: 8px 20px;
            border: 1px solid #bf6713;
            background: #f5e5d1;
            color: #000000;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9em;
            font-weight: 500;
        }

        .age-filter-btn:hover,
        .age-filter-btn.active {
            background: #bf6713;
            color: #f5e5d1;
            border-color: #bf6713;
            transform: scale(1.05);
        }

        @@media (max-width: 768px) {
            .playlist-title {
                font-size: 2em;
            }
            .safari-track-list-container {
                 height: 75vh;
            }
            .track-card-safari {
                 width: 95%;
                 margin-bottom: -50px;
            }
            .track-card-content {
                 padding: 15px;
                 min-height: 90px;
            }
             .track-card-title {
                font-size: 1.1em;
            }
            .track-card-details {
                font-size: 0.8em;
                margin-bottom: 10px;
            }
            .play-button, .delete-track-btn {
                 width: 32px;
                 height: 32px;
                 font-size: 14px;
                 bottom: 10px;
            }
             .play-button {
                 right: 55px;
            }
             .delete-track-btn {
                 right: 10px;
            }
            .filter-container {
                gap: 10px;
            }
        }
    </style>
}

@section Scripts {
    <script>
        function playTrack(trackId) {
            window.location.href = `/Music/PlayTrack/${trackId}`;
        }

        async function deleteTrack(trackId, playlistId) {
            if (!confirm('Are you sure you want to delete this track?')) return;

            try {
                const response = await fetch(`/Music/DeleteTrack?trackId=${trackId}&playlistId=${playlistId}`, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json'
                    }
                });

                if (!response.ok) {
                    const errorText = await response.text();
                    throw new Error(`HTTP error ${response.status}: ${errorText || 'Failed to delete track'}`);
                }

                const result = await response.json();

                if (result.success) {
                    const trackElement = document.querySelector(`[data-track-id="${trackId}"]`);
                    if (trackElement) {
                        trackElement.remove();
                        const container = document.querySelector('.safari-track-list-container');
                        if (!container.querySelector('.track-card-safari')) {
                            container.innerHTML = '<div class="empty-state-message"><h3>No tracks left in this playlist.</h3></div>';
                        }
                    }
                    console.log('Track deleted successfully!');
                } else {
                    alert('Error deleting track: ' + (result.message || 'Unknown error'));
                }
            } catch (error) {
                console.error('Error deleting track:', error);
                alert('Error deleting track: ' + error.message);
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            console.log('DOM Content Loaded for Playlist.cshtml');
            
            const container = document.querySelector('.safari-track-list-container');
            const filterButtons = document.querySelectorAll('.age-filter-btn');
            let currentAgeGroup = null;
            
            function filterTracks() {
                console.log('Filtering tracks...');
                const tracks = document.querySelectorAll('.track-card-safari');
                
                tracks.forEach(track => {
                    const trackAgeGroup = track.dataset.ageGroup;
                    const matchesAge = currentAgeGroup === null || currentAgeGroup === 'All' || trackAgeGroup === currentAgeGroup;
                    
                    console.log(`Track Age: ${trackAgeGroup}, Matches Age: ${matchesAge}`);
                    
                    if (matchesAge) {
                        track.style.display = '';
                    } else {
                        track.style.display = 'none';
                    }
                });
            }

            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    console.log('Filter button clicked:', this.dataset.ageGroup);
                    
                    if (this.classList.contains('active')) {
                         this.classList.remove('active');
                         currentAgeGroup = null;
                    } else {
                        filterButtons.forEach(btn => btn.classList.remove('active'));
                        this.classList.add('active');
                        currentAgeGroup = this.dataset.ageGroup;
                    }
                    filterTracks();
                });
            });

            filterTracks();
        });
    </script>
} 